import { type NextPage } from "next";
import { Button } from "../components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "../components/ui/form";
import { Input } from "../components/ui/input";
import { zodResolver } from "@hookform/resolvers/zod";
import * as z from "zod";
import { useForm } from "react-hook-form";
import { api } from "~/utils/api";
import Nav from "~/components/Nav";
import Head from "next/head";
import Section from "~/components/Section";
import { useRouter } from "next/router";

const formSchema = z.object({
  title: z.string(),
  date: z.string(),
  price: z.coerce.number(),
  capacity: z.coerce.number(),
  duration: z.coerce.number(),
});

const CreateEvent: NextPage = () => {
  const form = useForm<z.infer<typeof formSchema>>({
    resolver: zodResolver(formSchema),
  });
  const { push } = useRouter();
  const mutation = api.event.createEvent.useMutation({
    onSuccess: () => {
      push("/discover");
    },
  });
  function onSubmit(values: z.infer<typeof formSchema>) {
    console.log(values);
    mutation.mutate({
      capacity: values.capacity,
      name: values.title,
      price: values.price,
      beginsAt: new Date(values.date).toUTCString(),
      duration: values.duration,
    });
  }

  return (
    <>
      <Head>
        <title>EVNT - Create Event</title>
        <meta name="description" content="Generated by Evnt Team" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex h-screen flex-col justify-between">
        <Section className="relative">
          <Nav />
          <h2 className="mt-10 text-center font-primary text-6xl text-slate-800 underline">
            Create Event!
          </h2>

          {/*
      <div className="absolute h-48 w-48 rounded-full bg-[#0F172A]/50 top-44 filter blur-2xl"> </div>
      <div className="absolute h-48 w-48 rounded-full bg-[#F0C37C]/50 top-64 left-24 filter blur-2xl mix-blend-multiply"> </div>
      <div className="absolute h-48 w-48 rounded-full bg-[#0F172A]/50 bottom-24 right-4 filter blur-2xl mix-blend-multiply"> </div>
      <div className="absolute h-48 w-48 rounded-full bg-[#F0C37C]/50 bottom-14 right-24 filter blur-2xl"> </div>
      */}

          <div className="mx-auto my-10 w-[700px] rounded-md">
            <Form {...form}>
              <form
                onSubmit={form.handleSubmit(onSubmit)}
                className="grid grid-cols-2 gap-5 rounded-md bg-white p-4  font-secondary"
              >
                <div>
                  <FormField
                    control={form.control}
                    name="title"
                    render={({ field }) => (
                      <FormItem>
                        <div className="flex flex-col space-y-3">
                          <FormLabel>Title</FormLabel>
                          <FormControl>
                            <Input placeholder="Title" {...field} />
                          </FormControl>
                        </div>
                      </FormItem>
                    )}
                  />
                </div>
                <div>
                  <FormField
                    control={form.control}
                    name="date"
                    render={({ field }) => (
                      <FormItem>
                        <div className="flex flex-col space-y-3">
                          <FormLabel>Date</FormLabel>
                          <FormControl>
                            <Input {...field} type="datetime-local" />
                          </FormControl>
                          <FormMessage />
                        </div>
                      </FormItem>
                    )}
                  />
                </div>
                <div>
                  <FormField
                    control={form.control}
                    name="price"
                    render={({ field }) => (
                      <FormItem>
                        <div className="space-y-3">
                          <FormLabel>Price</FormLabel>
                          <FormControl>
                            <Input
                              type="number"
                              placeholder="INR 199"
                              {...field}
                            />
                          </FormControl>
                          <FormMessage />
                        </div>
                      </FormItem>
                    )}
                  />
                </div>
                <div>
                  <FormField
                    control={form.control}
                    name="capacity"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel>Capacity</FormLabel>
                        <FormControl>
                          <Input type="number" placeholder="0" {...field} />
                        </FormControl>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                </div>
                <div className="col-span-2">
                  <FormField
                    control={form.control}
                    name="duration"
                    render={({ field }) => (
                      <FormItem className="flex flex-col">
                        <FormLabel>Duration</FormLabel>
                        <FormControl className="w-fit rounded-md border-[1px] border-slate-200 p-2">
                          <select {...field}>
                            <option value="30">--</option>
                            <option value="30">30 min</option>
                            <option value="45">45 min</option>
                            <option value="60">1 hour</option>
                            <option value="90">1.5 hour</option>
                            <option value="120">2 hour</option>
                          </select>
                        </FormControl>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                </div>
                {mutation.isLoading ? (
                  <h3 className="col-span-2 mx-auto w-full text-center font-secondary">
                    Processing
                  </h3>
                ) : (
                  <Button
                    type="submit"
                    className="col-span-2 mx-auto w-full font-secondary"
                  >
                    Submit
                  </Button>
                )}

                <FormMessage />
              </form>
            </Form>
          </div>
        </Section>
        <Section className="mb-10 rounded-3xl bg-slate-800 py-10 text-center font-primary text-2xl font-bold text-slate-100">
          Created With ❤️ By The Evnt Team
        </Section>
      </div>
    </>
  );
};

export default CreateEvent;
